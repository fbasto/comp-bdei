Terminals unused in grammar

   VOID
   STAR
   DIV
   MOD
   RESERVED
   NEWLINE
   '+'
   '-'
   '*'
   '/'
   '('
   ')'


State 57 conflicts: 1 shift/reduce
State 81 conflicts: 8 shift/reduce
State 82 conflicts: 8 shift/reduce
State 83 conflicts: 8 shift/reduce
State 100 conflicts: 8 shift/reduce
State 110 conflicts: 8 shift/reduce
State 111 conflicts: 8 shift/reduce
State 112 conflicts: 8 shift/reduce
State 113 conflicts: 8 shift/reduce
State 114 conflicts: 8 shift/reduce
State 115 conflicts: 8 shift/reduce
State 116 conflicts: 8 shift/reduce
State 117 conflicts: 8 shift/reduce
State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID OBRACE SubProgram CBRACE

    2 SubProgram: SubProgram FieldDecl
    3           | SubProgram MethodDecl
    4           | SubProgram SEMI
    5           | %empty

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl SEMI

    7 SubFieldDecl: SubFieldDecl COMMA ID
    8             | %empty

    9 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   10 MethodHeader: Type ID OCURV OptFormalParams CCURV

   11 OptFormalParams: FormalParams
   12                | %empty

   13 MethodBody: OBRACE SubMethodBody CBRACE

   14 SubMethodBody: SubMethodBody VarDecl
   15              | SubMethodBody Statement
   16              | %empty

   17 FormalParams: Type ID SubFormalParams
   18             | STRING OSQUARE CSQUARE ID

   19 SubFormalParams: SubFormalParams COMMA Type ID
   20                | %empty

   21 VarDecl: Type ID SubVarDecl SEMI

   22 SubVarDecl: COMMA ID SubVarDecl
   23           | %empty

   24 Type: BOOL
   25     | INT
   26     | DOUBLE

   27 Statement: OBRACE MultipleStatements CBRACE
   28          | IF OCURV Expr CCURV Statement OptElseStatement
   29          | WHILE OCURV Expr CCURV Statement
   30          | DO Statement WHILE OCURV Expr CCURV SEMI
   31          | PRINT OCURV ExprStrlit CCURV SEMI
   32          | OptAMIPA SEMI
   33          | RETURN OptExpr SEMI

   34 MultipleStatements: Statement MultipleStatements
   35                   | %empty

   36 OptElseStatement: ELSE Statement
   37                 | %empty

   38 ExprStrlit: Expr
   39           | STRLIT

   40 OptAMIPA: Assignment
   41         | MethodInvocation
   42         | ParseArgs
   43         | %empty

   44 OptExpr: Expr
   45        | %empty

   46 Assignment: ID ASSIGN Expr

   47 MethodInvocation: ID OCURV OptExprCommaExprs CCURV

   48 MultipleCommaExpr: MultipleCommaExpr COMMA Expr
   49                  | %empty

   50 OptExprCommaExprs: MultipleCommaExpr Expr
   51                  | %empty

   52 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV

   53 OptDotLength: DOTLENGTH
   54             | %empty

   55 Expr: Assignment
   56     | MethodInvocation
   57     | ParseArgs
   58     | Expr AND Expr
   59     | Expr OR Expr
   60     | Expr EQ Expr
   61     | Expr GEQ Expr
   62     | Expr GT Expr
   63     | Expr LEQ Expr
   64     | Expr LT Expr
   65     | Expr NEQ Expr
   66     | PLUS Expr
   67     | MINUS Expr
   68     | NOT Expr
   69     | ID OptDotLength
   70     | OCURV Expr CCURV
   71     | BOOLLIT
   72     | DECLIT
   73     | REALLIT


Terminals, with rules where they appear

$end (0) 0
'(' (40)
')' (41)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
BOOL (258) 24
BOOLLIT (259) 71
CLASS (260) 1
DO (261) 30
DOTLENGTH (262) 53
DOUBLE (263) 26
ELSE (264) 36
IF (265) 28
INT (266) 25
PARSEINT (267) 52
PRINT (268) 31
PUBLIC (269) 6 9
RETURN (270) 33
STATIC (271) 6 9
STRING (272) 18
VOID (273)
WHILE (274) 29 30
OCURV (275) 10 28 29 30 31 47 52 70
CCURV (276) 10 28 29 30 31 47 52 70
OBRACE (277) 1 13 27
CBRACE (278) 1 13 27
OSQUARE (279) 18 52
CSQUARE (280) 18 52
AND (281) 58
OR (282) 59
LT (283) 64
GT (284) 62
EQ (285) 60
NEQ (286) 65
LEQ (287) 63
GEQ (288) 61
PLUS (289) 66
MINUS (290) 67
STAR (291)
DIV (292)
MOD (293)
NOT (294) 68
ASSIGN (295) 46
SEMI (296) 4 6 21 30 31 32 33
COMMA (297) 7 19 22 48
RESERVED (298)
NEWLINE (299)
STRLIT (300) 39
DECLIT (301) 72
REALLIT (302) 73
ID (303) 1 6 7 10 17 18 19 21 22 46 47 52 69


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Program (56)
    on left: 1, on right: 0
SubProgram (57)
    on left: 2 3 4 5, on right: 1 2 3 4
FieldDecl (58)
    on left: 6, on right: 2
SubFieldDecl (59)
    on left: 7 8, on right: 6 7
MethodDecl (60)
    on left: 9, on right: 3
MethodHeader (61)
    on left: 10, on right: 9
OptFormalParams (62)
    on left: 11 12, on right: 10
MethodBody (63)
    on left: 13, on right: 9
SubMethodBody (64)
    on left: 14 15 16, on right: 13 14 15
FormalParams (65)
    on left: 17 18, on right: 11
SubFormalParams (66)
    on left: 19 20, on right: 17 19
VarDecl (67)
    on left: 21, on right: 14
SubVarDecl (68)
    on left: 22 23, on right: 21 22
Type (69)
    on left: 24 25 26, on right: 6 10 17 19 21
Statement (70)
    on left: 27 28 29 30 31 32 33, on right: 15 28 29 30 34 36
MultipleStatements (71)
    on left: 34 35, on right: 27 34
OptElseStatement (72)
    on left: 36 37, on right: 28
ExprStrlit (73)
    on left: 38 39, on right: 31
OptAMIPA (74)
    on left: 40 41 42 43, on right: 32
OptExpr (75)
    on left: 44 45, on right: 33
Assignment (76)
    on left: 46, on right: 40 55
MethodInvocation (77)
    on left: 47, on right: 41 56
MultipleCommaExpr (78)
    on left: 48 49, on right: 48 50
OptExprCommaExprs (79)
    on left: 50 51, on right: 47
ParseArgs (80)
    on left: 52, on right: 42 57
OptDotLength (81)
    on left: 53 54, on right: 69
Expr (82)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73, on right: 28 29 30 38 44 46 48 50 52 58 59 60 61 62 63 64 65
    66 67 68 70


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID OBRACE SubProgram CBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . OBRACE SubProgram CBRACE

    OBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID OBRACE . SubProgram CBRACE

    $default  reduce using rule 5 (SubProgram)

    SubProgram  go to state 6


State 6

    1 Program: CLASS ID OBRACE SubProgram . CBRACE
    2 SubProgram: SubProgram . FieldDecl
    3           | SubProgram . MethodDecl
    4           | SubProgram . SEMI

    PUBLIC  shift, and go to state 7
    CBRACE  shift, and go to state 8
    SEMI    shift, and go to state 9

    FieldDecl   go to state 10
    MethodDecl  go to state 11


State 7

    6 FieldDecl: PUBLIC . STATIC Type ID SubFieldDecl SEMI
    9 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 12


State 8

    1 Program: CLASS ID OBRACE SubProgram CBRACE .

    $default  reduce using rule 1 (Program)


State 9

    4 SubProgram: SubProgram SEMI .

    $default  reduce using rule 4 (SubProgram)


State 10

    2 SubProgram: SubProgram FieldDecl .

    $default  reduce using rule 2 (SubProgram)


State 11

    3 SubProgram: SubProgram MethodDecl .

    $default  reduce using rule 3 (SubProgram)


State 12

    6 FieldDecl: PUBLIC STATIC . Type ID SubFieldDecl SEMI
    9 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 13
    DOUBLE  shift, and go to state 14
    INT     shift, and go to state 15

    MethodHeader  go to state 16
    Type          go to state 17


State 13

   24 Type: BOOL .

    $default  reduce using rule 24 (Type)


State 14

   26 Type: DOUBLE .

    $default  reduce using rule 26 (Type)


State 15

   25 Type: INT .

    $default  reduce using rule 25 (Type)


State 16

    9 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    OBRACE  shift, and go to state 18

    MethodBody  go to state 19


State 17

    6 FieldDecl: PUBLIC STATIC Type . ID SubFieldDecl SEMI
   10 MethodHeader: Type . ID OCURV OptFormalParams CCURV

    ID  shift, and go to state 20


State 18

   13 MethodBody: OBRACE . SubMethodBody CBRACE

    $default  reduce using rule 16 (SubMethodBody)

    SubMethodBody  go to state 21


State 19

    9 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 9 (MethodDecl)


State 20

    6 FieldDecl: PUBLIC STATIC Type ID . SubFieldDecl SEMI
   10 MethodHeader: Type ID . OCURV OptFormalParams CCURV

    OCURV  shift, and go to state 22

    $default  reduce using rule 8 (SubFieldDecl)

    SubFieldDecl  go to state 23


State 21

   13 MethodBody: OBRACE SubMethodBody . CBRACE
   14 SubMethodBody: SubMethodBody . VarDecl
   15              | SubMethodBody . Statement

    BOOL      shift, and go to state 13
    DO        shift, and go to state 24
    DOUBLE    shift, and go to state 14
    IF        shift, and go to state 25
    INT       shift, and go to state 15
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    CBRACE    shift, and go to state 31
    ID        shift, and go to state 32

    $default  reduce using rule 43 (OptAMIPA)

    VarDecl           go to state 33
    Type              go to state 34
    Statement         go to state 35
    OptAMIPA          go to state 36
    Assignment        go to state 37
    MethodInvocation  go to state 38
    ParseArgs         go to state 39


State 22

   10 MethodHeader: Type ID OCURV . OptFormalParams CCURV

    BOOL    shift, and go to state 13
    DOUBLE  shift, and go to state 14
    INT     shift, and go to state 15
    STRING  shift, and go to state 40

    $default  reduce using rule 12 (OptFormalParams)

    OptFormalParams  go to state 41
    FormalParams     go to state 42
    Type             go to state 43


State 23

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl . SEMI
    7 SubFieldDecl: SubFieldDecl . COMMA ID

    SEMI   shift, and go to state 44
    COMMA  shift, and go to state 45


State 24

   30 Statement: DO . Statement WHILE OCURV Expr CCURV SEMI

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    $default  reduce using rule 43 (OptAMIPA)

    Statement         go to state 46
    OptAMIPA          go to state 36
    Assignment        go to state 37
    MethodInvocation  go to state 38
    ParseArgs         go to state 39


State 25

   28 Statement: IF . OCURV Expr CCURV Statement OptElseStatement

    OCURV  shift, and go to state 47


State 26

   52 ParseArgs: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV

    OCURV  shift, and go to state 48


State 27

   31 Statement: PRINT . OCURV ExprStrlit CCURV SEMI

    OCURV  shift, and go to state 49


State 28

   33 Statement: RETURN . OptExpr SEMI

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    $default  reduce using rule 45 (OptExpr)

    OptExpr           go to state 58
    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 62


State 29

   29 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 63


State 30

   27 Statement: OBRACE . MultipleStatements CBRACE

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    SEMI      reduce using rule 43 (OptAMIPA)
    $default  reduce using rule 35 (MultipleStatements)

    Statement           go to state 64
    MultipleStatements  go to state 65
    OptAMIPA            go to state 36
    Assignment          go to state 37
    MethodInvocation    go to state 38
    ParseArgs           go to state 39


State 31

   13 MethodBody: OBRACE SubMethodBody CBRACE .

    $default  reduce using rule 13 (MethodBody)


State 32

   46 Assignment: ID . ASSIGN Expr
   47 MethodInvocation: ID . OCURV OptExprCommaExprs CCURV

    OCURV   shift, and go to state 66
    ASSIGN  shift, and go to state 67


State 33

   14 SubMethodBody: SubMethodBody VarDecl .

    $default  reduce using rule 14 (SubMethodBody)


State 34

   21 VarDecl: Type . ID SubVarDecl SEMI

    ID  shift, and go to state 68


State 35

   15 SubMethodBody: SubMethodBody Statement .

    $default  reduce using rule 15 (SubMethodBody)


State 36

   32 Statement: OptAMIPA . SEMI

    SEMI  shift, and go to state 69


State 37

   40 OptAMIPA: Assignment .

    $default  reduce using rule 40 (OptAMIPA)


State 38

   41 OptAMIPA: MethodInvocation .

    $default  reduce using rule 41 (OptAMIPA)


State 39

   42 OptAMIPA: ParseArgs .

    $default  reduce using rule 42 (OptAMIPA)


State 40

   18 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 70


State 41

   10 MethodHeader: Type ID OCURV OptFormalParams . CCURV

    CCURV  shift, and go to state 71


State 42

   11 OptFormalParams: FormalParams .

    $default  reduce using rule 11 (OptFormalParams)


State 43

   17 FormalParams: Type . ID SubFormalParams

    ID  shift, and go to state 72


State 44

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl SEMI .

    $default  reduce using rule 6 (FieldDecl)


State 45

    7 SubFieldDecl: SubFieldDecl COMMA . ID

    ID  shift, and go to state 73


State 46

   30 Statement: DO Statement . WHILE OCURV Expr CCURV SEMI

    WHILE  shift, and go to state 74


State 47

   28 Statement: IF OCURV . Expr CCURV Statement OptElseStatement

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 75


State 48

   52 ParseArgs: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV

    ID  shift, and go to state 76


State 49

   31 Statement: PRINT OCURV . ExprStrlit CCURV SEMI

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    STRLIT    shift, and go to state 77
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    ExprStrlit        go to state 78
    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 79


State 50

   71 Expr: BOOLLIT .

    $default  reduce using rule 71 (Expr)


State 51

   70 Expr: OCURV . Expr CCURV

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 80


State 52

   66 Expr: PLUS . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 81


State 53

   67 Expr: MINUS . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 82


State 54

   68 Expr: NOT . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 83


State 55

   72 Expr: DECLIT .

    $default  reduce using rule 72 (Expr)


State 56

   73 Expr: REALLIT .

    $default  reduce using rule 73 (Expr)


State 57

   46 Assignment: ID . ASSIGN Expr
   47 MethodInvocation: ID . OCURV OptExprCommaExprs CCURV
   69 Expr: ID . OptDotLength

    DOTLENGTH  shift, and go to state 84
    OCURV      shift, and go to state 66
    ASSIGN     shift, and go to state 67

    OCURV     [reduce using rule 54 (OptDotLength)]
    $default  reduce using rule 54 (OptDotLength)

    OptDotLength  go to state 85


State 58

   33 Statement: RETURN OptExpr . SEMI

    SEMI  shift, and go to state 86


State 59

   55 Expr: Assignment .

    $default  reduce using rule 55 (Expr)


State 60

   56 Expr: MethodInvocation .

    $default  reduce using rule 56 (Expr)


State 61

   57 Expr: ParseArgs .

    $default  reduce using rule 57 (Expr)


State 62

   44 OptExpr: Expr .
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    $default  reduce using rule 44 (OptExpr)


State 63

   29 Statement: WHILE OCURV . Expr CCURV Statement

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 95


State 64

   34 MultipleStatements: Statement . MultipleStatements

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    SEMI      reduce using rule 43 (OptAMIPA)
    $default  reduce using rule 35 (MultipleStatements)

    Statement           go to state 64
    MultipleStatements  go to state 96
    OptAMIPA            go to state 36
    Assignment          go to state 37
    MethodInvocation    go to state 38
    ParseArgs           go to state 39


State 65

   27 Statement: OBRACE MultipleStatements . CBRACE

    CBRACE  shift, and go to state 97


State 66

   47 MethodInvocation: ID OCURV . OptExprCommaExprs CCURV

    CCURV     reduce using rule 51 (OptExprCommaExprs)
    $default  reduce using rule 49 (MultipleCommaExpr)

    MultipleCommaExpr  go to state 98
    OptExprCommaExprs  go to state 99


State 67

   46 Assignment: ID ASSIGN . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 100


State 68

   21 VarDecl: Type ID . SubVarDecl SEMI

    COMMA  shift, and go to state 101

    $default  reduce using rule 23 (SubVarDecl)

    SubVarDecl  go to state 102


State 69

   32 Statement: OptAMIPA SEMI .

    $default  reduce using rule 32 (Statement)


State 70

   18 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 103


State 71

   10 MethodHeader: Type ID OCURV OptFormalParams CCURV .

    $default  reduce using rule 10 (MethodHeader)


State 72

   17 FormalParams: Type ID . SubFormalParams

    $default  reduce using rule 20 (SubFormalParams)

    SubFormalParams  go to state 104


State 73

    7 SubFieldDecl: SubFieldDecl COMMA ID .

    $default  reduce using rule 7 (SubFieldDecl)


State 74

   30 Statement: DO Statement WHILE . OCURV Expr CCURV SEMI

    OCURV  shift, and go to state 105


State 75

   28 Statement: IF OCURV Expr . CCURV Statement OptElseStatement
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    CCURV  shift, and go to state 106
    AND    shift, and go to state 87
    OR     shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92
    LEQ    shift, and go to state 93
    GEQ    shift, and go to state 94


State 76

   52 ParseArgs: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 107


State 77

   39 ExprStrlit: STRLIT .

    $default  reduce using rule 39 (ExprStrlit)


State 78

   31 Statement: PRINT OCURV ExprStrlit . CCURV SEMI

    CCURV  shift, and go to state 108


State 79

   38 ExprStrlit: Expr .
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    $default  reduce using rule 38 (ExprStrlit)


State 80

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr
   70     | OCURV Expr . CCURV

    CCURV  shift, and go to state 109
    AND    shift, and go to state 87
    OR     shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92
    LEQ    shift, and go to state 93
    GEQ    shift, and go to state 94


State 81

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr
   66     | PLUS Expr .

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 66 (Expr)]
    OR        [reduce using rule 66 (Expr)]
    LT        [reduce using rule 66 (Expr)]
    GT        [reduce using rule 66 (Expr)]
    EQ        [reduce using rule 66 (Expr)]
    NEQ       [reduce using rule 66 (Expr)]
    LEQ       [reduce using rule 66 (Expr)]
    GEQ       [reduce using rule 66 (Expr)]
    $default  reduce using rule 66 (Expr)


State 82

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr
   67     | MINUS Expr .

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 67 (Expr)]
    OR        [reduce using rule 67 (Expr)]
    LT        [reduce using rule 67 (Expr)]
    GT        [reduce using rule 67 (Expr)]
    EQ        [reduce using rule 67 (Expr)]
    NEQ       [reduce using rule 67 (Expr)]
    LEQ       [reduce using rule 67 (Expr)]
    GEQ       [reduce using rule 67 (Expr)]
    $default  reduce using rule 67 (Expr)


State 83

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr
   68     | NOT Expr .

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 68 (Expr)]
    OR        [reduce using rule 68 (Expr)]
    LT        [reduce using rule 68 (Expr)]
    GT        [reduce using rule 68 (Expr)]
    EQ        [reduce using rule 68 (Expr)]
    NEQ       [reduce using rule 68 (Expr)]
    LEQ       [reduce using rule 68 (Expr)]
    GEQ       [reduce using rule 68 (Expr)]
    $default  reduce using rule 68 (Expr)


State 84

   53 OptDotLength: DOTLENGTH .

    $default  reduce using rule 53 (OptDotLength)


State 85

   69 Expr: ID OptDotLength .

    $default  reduce using rule 69 (Expr)


State 86

   33 Statement: RETURN OptExpr SEMI .

    $default  reduce using rule 33 (Statement)


State 87

   58 Expr: Expr AND . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 110


State 88

   59 Expr: Expr OR . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 111


State 89

   64 Expr: Expr LT . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 112


State 90

   62 Expr: Expr GT . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 113


State 91

   60 Expr: Expr EQ . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 114


State 92

   65 Expr: Expr NEQ . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 115


State 93

   63 Expr: Expr LEQ . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 116


State 94

   61 Expr: Expr GEQ . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 117


State 95

   29 Statement: WHILE OCURV Expr . CCURV Statement
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    CCURV  shift, and go to state 118
    AND    shift, and go to state 87
    OR     shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92
    LEQ    shift, and go to state 93
    GEQ    shift, and go to state 94


State 96

   34 MultipleStatements: Statement MultipleStatements .

    $default  reduce using rule 34 (MultipleStatements)


State 97

   27 Statement: OBRACE MultipleStatements CBRACE .

    $default  reduce using rule 27 (Statement)


State 98

   48 MultipleCommaExpr: MultipleCommaExpr . COMMA Expr
   50 OptExprCommaExprs: MultipleCommaExpr . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    COMMA     shift, and go to state 119
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 120


State 99

   47 MethodInvocation: ID OCURV OptExprCommaExprs . CCURV

    CCURV  shift, and go to state 121


State 100

   46 Assignment: ID ASSIGN Expr .
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 46 (Assignment)]
    OR        [reduce using rule 46 (Assignment)]
    LT        [reduce using rule 46 (Assignment)]
    GT        [reduce using rule 46 (Assignment)]
    EQ        [reduce using rule 46 (Assignment)]
    NEQ       [reduce using rule 46 (Assignment)]
    LEQ       [reduce using rule 46 (Assignment)]
    GEQ       [reduce using rule 46 (Assignment)]
    $default  reduce using rule 46 (Assignment)


State 101

   22 SubVarDecl: COMMA . ID SubVarDecl

    ID  shift, and go to state 122


State 102

   21 VarDecl: Type ID SubVarDecl . SEMI

    SEMI  shift, and go to state 123


State 103

   18 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 124


State 104

   17 FormalParams: Type ID SubFormalParams .
   19 SubFormalParams: SubFormalParams . COMMA Type ID

    COMMA  shift, and go to state 125

    $default  reduce using rule 17 (FormalParams)


State 105

   30 Statement: DO Statement WHILE OCURV . Expr CCURV SEMI

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 126


State 106

   28 Statement: IF OCURV Expr CCURV . Statement OptElseStatement

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    $default  reduce using rule 43 (OptAMIPA)

    Statement         go to state 127
    OptAMIPA          go to state 36
    Assignment        go to state 37
    MethodInvocation  go to state 38
    ParseArgs         go to state 39


State 107

   52 ParseArgs: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 128


State 108

   31 Statement: PRINT OCURV ExprStrlit CCURV . SEMI

    SEMI  shift, and go to state 129


State 109

   70 Expr: OCURV Expr CCURV .

    $default  reduce using rule 70 (Expr)


State 110

   58 Expr: Expr . AND Expr
   58     | Expr AND Expr .
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 58 (Expr)]
    OR        [reduce using rule 58 (Expr)]
    LT        [reduce using rule 58 (Expr)]
    GT        [reduce using rule 58 (Expr)]
    EQ        [reduce using rule 58 (Expr)]
    NEQ       [reduce using rule 58 (Expr)]
    LEQ       [reduce using rule 58 (Expr)]
    GEQ       [reduce using rule 58 (Expr)]
    $default  reduce using rule 58 (Expr)


State 111

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   59     | Expr OR Expr .
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 59 (Expr)]
    OR        [reduce using rule 59 (Expr)]
    LT        [reduce using rule 59 (Expr)]
    GT        [reduce using rule 59 (Expr)]
    EQ        [reduce using rule 59 (Expr)]
    NEQ       [reduce using rule 59 (Expr)]
    LEQ       [reduce using rule 59 (Expr)]
    GEQ       [reduce using rule 59 (Expr)]
    $default  reduce using rule 59 (Expr)


State 112

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   64     | Expr LT Expr .
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 64 (Expr)]
    OR        [reduce using rule 64 (Expr)]
    LT        [reduce using rule 64 (Expr)]
    GT        [reduce using rule 64 (Expr)]
    EQ        [reduce using rule 64 (Expr)]
    NEQ       [reduce using rule 64 (Expr)]
    LEQ       [reduce using rule 64 (Expr)]
    GEQ       [reduce using rule 64 (Expr)]
    $default  reduce using rule 64 (Expr)


State 113

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   62     | Expr GT Expr .
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 62 (Expr)]
    OR        [reduce using rule 62 (Expr)]
    LT        [reduce using rule 62 (Expr)]
    GT        [reduce using rule 62 (Expr)]
    EQ        [reduce using rule 62 (Expr)]
    NEQ       [reduce using rule 62 (Expr)]
    LEQ       [reduce using rule 62 (Expr)]
    GEQ       [reduce using rule 62 (Expr)]
    $default  reduce using rule 62 (Expr)


State 114

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   60     | Expr EQ Expr .
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 60 (Expr)]
    OR        [reduce using rule 60 (Expr)]
    LT        [reduce using rule 60 (Expr)]
    GT        [reduce using rule 60 (Expr)]
    EQ        [reduce using rule 60 (Expr)]
    NEQ       [reduce using rule 60 (Expr)]
    LEQ       [reduce using rule 60 (Expr)]
    GEQ       [reduce using rule 60 (Expr)]
    $default  reduce using rule 60 (Expr)


State 115

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr
   65     | Expr NEQ Expr .

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 65 (Expr)]
    OR        [reduce using rule 65 (Expr)]
    LT        [reduce using rule 65 (Expr)]
    GT        [reduce using rule 65 (Expr)]
    EQ        [reduce using rule 65 (Expr)]
    NEQ       [reduce using rule 65 (Expr)]
    LEQ       [reduce using rule 65 (Expr)]
    GEQ       [reduce using rule 65 (Expr)]
    $default  reduce using rule 65 (Expr)


State 116

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   63     | Expr LEQ Expr .
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 63 (Expr)]
    OR        [reduce using rule 63 (Expr)]
    LT        [reduce using rule 63 (Expr)]
    GT        [reduce using rule 63 (Expr)]
    EQ        [reduce using rule 63 (Expr)]
    NEQ       [reduce using rule 63 (Expr)]
    LEQ       [reduce using rule 63 (Expr)]
    GEQ       [reduce using rule 63 (Expr)]
    $default  reduce using rule 63 (Expr)


State 117

   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   61     | Expr GEQ Expr .
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    AND       [reduce using rule 61 (Expr)]
    OR        [reduce using rule 61 (Expr)]
    LT        [reduce using rule 61 (Expr)]
    GT        [reduce using rule 61 (Expr)]
    EQ        [reduce using rule 61 (Expr)]
    NEQ       [reduce using rule 61 (Expr)]
    LEQ       [reduce using rule 61 (Expr)]
    GEQ       [reduce using rule 61 (Expr)]
    $default  reduce using rule 61 (Expr)


State 118

   29 Statement: WHILE OCURV Expr CCURV . Statement

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    $default  reduce using rule 43 (OptAMIPA)

    Statement         go to state 130
    OptAMIPA          go to state 36
    Assignment        go to state 37
    MethodInvocation  go to state 38
    ParseArgs         go to state 39


State 119

   48 MultipleCommaExpr: MultipleCommaExpr COMMA . Expr

    BOOLLIT   shift, and go to state 50
    PARSEINT  shift, and go to state 26
    OCURV     shift, and go to state 51
    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    NOT       shift, and go to state 54
    DECLIT    shift, and go to state 55
    REALLIT   shift, and go to state 56
    ID        shift, and go to state 57

    Assignment        go to state 59
    MethodInvocation  go to state 60
    ParseArgs         go to state 61
    Expr              go to state 131


State 120

   50 OptExprCommaExprs: MultipleCommaExpr Expr .
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    $default  reduce using rule 50 (OptExprCommaExprs)


State 121

   47 MethodInvocation: ID OCURV OptExprCommaExprs CCURV .

    $default  reduce using rule 47 (MethodInvocation)


State 122

   22 SubVarDecl: COMMA ID . SubVarDecl

    COMMA  shift, and go to state 101

    $default  reduce using rule 23 (SubVarDecl)

    SubVarDecl  go to state 132


State 123

   21 VarDecl: Type ID SubVarDecl SEMI .

    $default  reduce using rule 21 (VarDecl)


State 124

   18 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 18 (FormalParams)


State 125

   19 SubFormalParams: SubFormalParams COMMA . Type ID

    BOOL    shift, and go to state 13
    DOUBLE  shift, and go to state 14
    INT     shift, and go to state 15

    Type  go to state 133


State 126

   30 Statement: DO Statement WHILE OCURV Expr . CCURV SEMI
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    CCURV  shift, and go to state 134
    AND    shift, and go to state 87
    OR     shift, and go to state 88
    LT     shift, and go to state 89
    GT     shift, and go to state 90
    EQ     shift, and go to state 91
    NEQ    shift, and go to state 92
    LEQ    shift, and go to state 93
    GEQ    shift, and go to state 94


State 127

   28 Statement: IF OCURV Expr CCURV Statement . OptElseStatement

    ELSE  shift, and go to state 135

    ELSE      [reduce using rule 37 (OptElseStatement)]
    $default  reduce using rule 37 (OptElseStatement)

    OptElseStatement  go to state 136


State 128

   52 ParseArgs: PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    CSQUARE  shift, and go to state 137
    AND      shift, and go to state 87
    OR       shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    LEQ      shift, and go to state 93
    GEQ      shift, and go to state 94


State 129

   31 Statement: PRINT OCURV ExprStrlit CCURV SEMI .

    $default  reduce using rule 31 (Statement)


State 130

   29 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 29 (Statement)


State 131

   48 MultipleCommaExpr: MultipleCommaExpr COMMA Expr .
   58 Expr: Expr . AND Expr
   59     | Expr . OR Expr
   60     | Expr . EQ Expr
   61     | Expr . GEQ Expr
   62     | Expr . GT Expr
   63     | Expr . LEQ Expr
   64     | Expr . LT Expr
   65     | Expr . NEQ Expr

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    GEQ  shift, and go to state 94

    $default  reduce using rule 48 (MultipleCommaExpr)


State 132

   22 SubVarDecl: COMMA ID SubVarDecl .

    $default  reduce using rule 22 (SubVarDecl)


State 133

   19 SubFormalParams: SubFormalParams COMMA Type . ID

    ID  shift, and go to state 138


State 134

   30 Statement: DO Statement WHILE OCURV Expr CCURV . SEMI

    SEMI  shift, and go to state 139


State 135

   36 OptElseStatement: ELSE . Statement

    DO        shift, and go to state 24
    IF        shift, and go to state 25
    PARSEINT  shift, and go to state 26
    PRINT     shift, and go to state 27
    RETURN    shift, and go to state 28
    WHILE     shift, and go to state 29
    OBRACE    shift, and go to state 30
    ID        shift, and go to state 32

    $default  reduce using rule 43 (OptAMIPA)

    Statement         go to state 140
    OptAMIPA          go to state 36
    Assignment        go to state 37
    MethodInvocation  go to state 38
    ParseArgs         go to state 39


State 136

   28 Statement: IF OCURV Expr CCURV Statement OptElseStatement .

    $default  reduce using rule 28 (Statement)


State 137

   52 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 141


State 138

   19 SubFormalParams: SubFormalParams COMMA Type ID .

    $default  reduce using rule 19 (SubFormalParams)


State 139

   30 Statement: DO Statement WHILE OCURV Expr CCURV SEMI .

    $default  reduce using rule 30 (Statement)


State 140

   36 OptElseStatement: ELSE Statement .

    $default  reduce using rule 36 (OptElseStatement)


State 141

   52 ParseArgs: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 52 (ParseArgs)
